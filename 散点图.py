import pandas as pda
import matplotlib.pyplot as plt

path = r'D:\mmm\轨迹数据集\widthInfo-汇总比较-pcharm -1v1+1.4all.xlsx'
data = pda.read_excel(path)
x1=list(data.幅宽)
x2=list(data.平均速度)
x3=list(data.采样间隔)
x4=list(data.平均两点间的距离)
y=list(data.最优半径)
# plt.subplot(1,4)
# plt.plot(x1,y,'r.',x2,y,'b.',x3,y,'k.',x4,y,'y.')
# plt.plot(y,x1,'r.',y,x2,'b.',y,x3,'k.',y,x4,'y.')
# plt.show()
fig = plt.figure()
#
x=[x1,x2,x3,x4]
colors=['red','blue','black','pink']
for j in range(4):
    subfig = fig.add_subplot(1, 4, j+1)
    subfig.scatter(x[j],y, s=5, c=colors[j])
plt.show()






# import matplotlib.pyplot as plt
#
# rawData = [[55, 9, 56, 0.46, 18, 6, "good", "BJ"],
#            [25, 11, 21, 0.65, 34, 9, "verygood", "BJ"],
#            [56, 7, 63, 0.3, 14, 5, "good", "BJ"],
#            [33, 7, 29, 0.33, 16, 6, "verygood", "BJ"],
#            [42, 24, 44, 0.76, 40, 16, "verygood", "BJ"],
#            [82, 58, 90, 1.77, 68, 33, "good", "BJ"],
#            [74, 49, 77, 1.46, 48, 27, "good", "BJ"],
#            [78, 55, 80, 1.29, 59, 29, "good", "BJ"],
#            [267, 216, 280, 4.8, 108, 64, "severe", "BJ"],
#            [185, 127, 216, 2.52, 61, 27, "middle", "BJ"],
#            [39, 19, 38, 0.57, 31, 15, "verygood", "BJ"],
#            [41, 11, 40, 0.43, 21, 7, "verygood", "BJ"],
#            [64, 38, 74, 1.04, 46, 22, "good", "BJ"],
#            [108, 79, 120, 1.7, 75, 41, "light", "BJ"],
#            [108, 63, 116, 1.48, 44, 26, "light", "BJ"],
#            [33, 6, 29, 0.34, 13, 5, "verygood", "BJ"],
#            [94, 66, 110, 1.54, 62, 31, "good", "BJ"],
#            [186, 142, 192, 3.88, 93, 79, "middle", "BJ"],
#            [57, 31, 54, 0.96, 32, 14, "good", "BJ"],
#            [22, 8, 17, 0.48, 23, 10, "verygood", "BJ"],
#            [39, 15, 36, 0.61, 29, 13, "verygood", "BJ"],
#            [94, 69, 114, 2.08, 73, 39, "good", "BJ"],
#            [99, 73, 110, 2.43, 76, 48, "good", "BJ"],
#            [31, 12, 30, 0.5, 32, 16, "verygood", "BJ"],
#            [42, 27, 43, 1, 53, 22, "verygood", "BJ"],
#            [154, 117, 157, 3.05, 92, 58, "middle", "BJ"],
#            [234, 185, 230, 4.09, 123, 69, "severe", "BJ"],
#            [160, 120, 186, 2.77, 91, 50, "middle", "BJ"],
#            [134, 96, 165, 2.76, 83, 41, "light", "BJ"],
#            [52, 24, 60, 1.03, 50, 21, "good", "BJ"],
#            [46, 5, 49, 0.28, 10, 6, "verygood", "BJ"],
#
#            [26, 37, 27, 1.163, 27, 13, "verygood", "GZ"],
#            [85, 62, 71, 1.195, 60, 8, "good", "GZ"],
#            [78, 38, 74, 1.363, 37, 7, "good", "GZ"],
#            [21, 21, 36, 0.634, 40, 9, "verygood", "GZ"],
#            [41, 42, 46, 0.915, 81, 13, "verygood", "GZ"],
#            [56, 52, 69, 1.067, 92, 16, "good", "GZ"],
#            [64, 30, 28, 0.924, 51, 2, "good", "GZ"],
#            [55, 48, 74, 1.236, 75, 26, "good", "GZ"],
#            [76, 85, 113, 1.237, 114, 27, "good", "GZ"],
#            [91, 81, 104, 1.041, 56, 40, "good", "GZ"],
#            [84, 39, 60, 0.964, 25, 11, "good", "GZ"],
#            [64, 51, 101, 0.862, 58, 23, "good", "GZ"],
#            [70, 69, 120, 1.198, 65, 36, "good", "GZ"],
#            [77, 105, 178, 2.549, 64, 16, "good", "GZ"],
#            [109, 68, 87, 0.996, 74, 29, "light", "GZ"],
#            [73, 68, 97, 0.905, 51, 34, "good", "GZ"],
#            [54, 27, 47, 0.592, 53, 12, "good", "GZ"],
#            [51, 61, 97, 0.811, 65, 19, "good", "GZ"],
#            [91, 71, 121, 1.374, 43, 18, "good", "GZ"],
#            [73, 102, 182, 2.787, 44, 19, "good", "GZ"],
#            [73, 50, 76, 0.717, 31, 20, "good", "GZ"],
#            [84, 94, 140, 2.238, 68, 18, "good", "GZ"],
#            [93, 77, 104, 1.165, 53, 7, "good", "GZ"],
#            [99, 130, 227, 3.97, 55, 15, "good", "GZ"],
#            [146, 84, 139, 1.094, 40, 17, "light", "GZ"],
#            [113, 108, 137, 1.481, 48, 15, "light", "GZ"],
#            [81, 48, 62, 1.619, 26, 3, "good", "GZ"],
#            [56, 48, 68, 1.336, 37, 9, "good", "GZ"],
#            [82, 92, 174, 3.29, 0, 13, "good", "GZ"],
#            [106, 116, 188, 3.628, 101, 16, "light", "GZ"],
#            [118, 50, 0, 1.383, 76, 11, "light", "GZ"],
#
#            [91, 45, 125, 0.82, 34, 23, "good", "SH"],
#            [65, 27, 78, 0.86, 45, 29, "good", "SH"],
#            [83, 60, 84, 1.09, 73, 27, "good", "SH"],
#            [109, 81, 121, 1.28, 68, 51, "light", "SH"],
#            [106, 77, 114, 1.07, 55, 51, "light", "SH"],
#            [109, 81, 121, 1.28, 68, 51, "light", "SH"],
#            [106, 77, 114, 1.07, 55, 51, "light", "SH"],
#            [89, 65, 78, 0.86, 51, 26, "good", "SH"],
#            [53, 33, 47, 0.64, 50, 17, "good", "SH"],
#            [80, 55, 80, 1.01, 75, 24, "good", "SH"],
#            [117, 81, 124, 1.03, 45, 24, "light", "SH"],
#            [99, 71, 142, 1.1, 62, 42, "good", "SH"],
#            [95, 69, 130, 1.28, 74, 50, "good", "SH"],
#            [116, 87, 131, 1.47, 84, 40, "light", "SH"],
#            [108, 80, 121, 1.3, 85, 37, "light", "SH"],
#            [134, 83, 167, 1.16, 57, 43, "light", "SH"],
#            [79, 43, 107, 1.05, 59, 37, "good", "SH"],
#            [71, 46, 89, 0.86, 64, 25, "good", "SH"],
#            [97, 71, 113, 1.17, 88, 31, "good", "SH"],
#            [84, 57, 91, 0.85, 55, 31, "good", "SH"],
#            [87, 63, 101, 0.9, 56, 41, "good", "SH"],
#            [104, 77, 119, 1.09, 73, 48, "light", "SH"],
#            [87, 62, 100, 1, 72, 28, "good", "SH"],
#            [168, 128, 172, 1.49, 97, 56, "middle", "SH"],
#            [65, 45, 51, 0.74, 39, 17, "good", "SH"],
#            [39, 24, 38, 0.61, 47, 17, "verygood", "SH"],
#            [39, 24, 39, 0.59, 50, 19, "verygood", "SH"],
#            [93, 68, 96, 1.05, 79, 29, "good", "SH"],
#            [188, 143, 197, 1.66, 99, 51, "middle", "SH"],
#            [174, 131, 174, 1.55, 108, 50, "middle", "SH"],
#            [187, 143, 201, 1.39, 89, 53, "middle", "SH"]];
#
# print(rawData[0:30])
# print(rawData[31:62])
# print(rawData[63:])
# fig = plt.figure()
#
# for i in range(6):
#     for j in range(6):
#         if (j <= i):
#             continue
#         subfig = fig.add_subplot(5, 5, i * 5 + j)
#         subfig.scatter([x[i] for x in rawData[0:30]], [x[j] for x in rawData[0:30]], s=5, c='red')
#         subfig.scatter([x[i] for x in rawData[31:62]], [x[j] for x in rawData[31:62]], s=5, c='green')
#         subfig.scatter([x[i] for x in rawData[63:]], [x[j] for x in rawData[63:]], s=5, c='blue')
#
# # plt.savefig("/home/user/Desktop/scatter.png")
# plt.show()
